name: CDK Deploy

on:
  push:
env:
  AWS_REGION: "eu-west-2"
  AWS_ACCOUNT_DEV: "679289103098"
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_ACCESSTOKEN: ${{ secrets.ARTIFACTORY_ACCESSTOKEN }}
  ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
  NPM_ARTIFACTORY_URL: ${{ secrets.NPM_ARTIFACTORY_URL }}
  NPM_ARTIFACTORY_ACCESSTOKEN: ${{ secrets.NPM_ARTIFACTORY_ACCESSTOKEN }}

# permissions can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the ODIC JSON web token (JWT)
  contents: read # This is required for actions/checkout
  actions: read
jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Print current directory
        run: |
          echo "The current directory is $GITHUB_WORKSPACE"
          echo "The current directory is $PWD"

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Node.js 16.20
        uses: actions/setup-node@v3
        with:
          node-version: "16.20.0"

      - name: Install node dependencies
        run: |
          npm config set //${{ env.NPM_ARTIFACTORY_URL }}/:_auth='${{ env.NPM_ARTIFACTORY_ACCESSTOKEN }}'
          npm config set strict-ssl false
          npm config set always-auth true
          npm config set unsafe-perm false
          npm config set email ${{ env.ARTIFACTORY_USERNAME }}@metoffice.gov.uk
          npm config set registry https://${{ env.NPM_ARTIFACTORY_URL }}/npm
          npm ci --include=dev --verbose

      # Configure AWS credentials
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_DEV }}:role/ODICGitHubDeployRole
          role-session-name: odic-github
          aws-region: ${{ env.AWS_REGION }}

      # Install cdk, typescript, and ts-node
      - name: install cdk, typescript, and ts-node
        run: |
          npm install -g cdk@^2.87.0 --include=dev --verbose
      # Install aws-cdk-lib, textlint-rule-no-todo, and textlint
  #   - name: install aws-cdk-lib, textlint-rule-no-todo, and textlint
  #      run: |
  #       pwd
  #       npm install -g aws-cdk-lib@^2.87.0 textlint-rule-no-todo@^2.0.1 textlint@^13.3.2 --include=dev --verbose
 #     - name: print installed Node.js package
 #       run: |
 #         npm ls
      - name: npm install
        run: |
          npm ci --include=dev --verbose
      - name: cdk deploy
 #       working-directory: /Users/david.smith/git/gh-actions-dev-hazelnut/bootstrap
        run: |
          cdk diff --verbose --app "npx ts-node ./bootstrap/bin/s3-bucket.ts" --require-approval never
